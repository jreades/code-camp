---
title: "Doing Urban Spatial Science"
jupyter: python3
---


In [Why the Future of Geography is Cheap](https://www.rgs.org/schools/teaching-resources/why-the-future-of-geography-is-cheap/) we suggested that:

> We live in a world transformed by big (geo)data: from Facebook likes and satellites, to travel cards and drones, the process of collecting and analysing data about the world around us is becoming very, very cheap. Twenty years ago, gathering data about the human and physical environment was expensive, but now a lot of it is generated as the 'exhaust' of day-to-day activity: tapping on to the bus or train, taking photos (whether from a satellite, drone, or disposable camera), making phone calls, using our credit cards, and surfing the web. And that's before you start looking at the Terabytes of data being generated by satellites, air quality and river flow sensors, and other Earth Observation Systems! 
>
> As the costs of capturing, curating, and processing these data sets falls, the disciplines of geography and planning are changing. You face a world in which many of the defining career options for students with basic quantitative skills either no longer exist, or have been seriously de-skilled by improvements in software. So much can now be done through a web browser (e.g. [CartoDB](https://carto.com)) that jobs specifying 'Knowledge of ArcGIS' are becoming hard(er) to find; not because geo-analysis jobs are no longer in demand or no longer done -- in fact, they are more vital than ever -- but because the market for these skills has split in two: expensive, specialist software is being superseded by simple(r) web-based tools on one side, and by customised code on the other.
>
> A big gap is opening up between the stuff that can be done by pushing buttons (which no longer even really requires geographical training) and the 'cutting edge'. 

For additional perspective there's: 

- [GIS Jobs of Today](http://www.directionsmag.com/entry/gis-jobs-of-today-should-you-have-programming-skills/473296): should you have programming skills?
- [Geographic Data Science](https://doi.org/10.1111/gean.12194) by two of its foremost practitioners at Liverpool.
- [Geographic Data Science with Python](https://geographicdata.science/book/intro.html) which is a whole *book* that you can access for free by three of the most productive researchers and committed teachers you could hope to find.

But if you'd prefer to watch a video instead, then here's CARTO's take on Spatial Data Science:

{{< video https://youtu.be/osAbJeTho5w >}}

A more individual take that explains how GIS and Spatial Data Science differ comes from Matt Forrest:

{{< video https://youtu.be/SEEFQ6dkWH0 >}}

## So What is Urban Spatial Science?

It is for the reasons introduced above that terms like 'geocomputation', 'spatial data science', 'geographic data science' and, of course, '**urban spatial science**' are back in vogue. After a period in which GIS tools like ArcMap, ArcPro, MapInfo and (our favourite) [QGIS](https://www.qgis.org/) were front-and-centre for many people with an interest in spatial data, the increased availability of data and code has created a need for a 'new' (or old, depending on your view) type of spatial analyst able to reason _through_ code while remaining critically aware of the limitations of the data.

Different universities have settled on different terms, partly because of philosophical differences, and partly because of branding. In practice, there's a lot of a overlap, though [some authors](https://doi.org/10.1111/gec3.12537) would draw a strong distinction between, say, Geographic Data Science and Geographic Information Science.

Ultimately, we settled on Urban Spatial Science because we wanted to capture the (Spatial) Data Science aspect, the Urban focus, and the Science of Cities elements that we include in our taught modules. Plus, no one else was using that name (yet). Code Camp, however, focusses on the practical basics of programming in Python in order to support your development as someone able to investigate cities and their structures through code and data.

